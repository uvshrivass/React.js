1) Create searh_bar js container

import React, {Component} from "react";
export default class SearchBar extends Component{
    render(){
        return(
            <form className="input-group">
                <input />
                <span className="input-group-btn">
                    <button type="submit" className="btn btn-secondary"> Submit</button>
                </span>
            </form>
        )
    }
}
------------------------------------

Controlled Component of search bar :

import React, {Component} from "react";
export default class SearchBar extends Component{
    constructor(props){
        super(props);
        this.state = {term : ""}
    }
    onInputChange(event){
        console.log(event.target.value);
    }
    render(){
        return(
            <form className="input-group">
                <input 
                    placeholder="Enter the city to know the weather"
                    className="form-control"
                    value={this.state.term}
                    onChange={this.onInputChange}
                />
                <span className="input-group-btn">
                    <button type="submit" className="btn btn-secondary"> Submit</button>
                </span>
            </form>
        )
    }
}
--------------------------------------------

setstate error :

import React, {Component} from "react";
export default class SearchBar extends Component{
    constructor(props){
        super(props);
        this.state = {term : ""}
    }
    onInputChange(event){
        console.log(event.target.value);
        this.setState({term : event.target.value})
    }
    render(){
        return(
            <form className="input-group">
                <input 
                    placeholder="Enter the city to know the weather"
                    className="form-control"
                    value={this.state.term}
                    onChange={this.onInputChange}
                />
                <span className="input-group-btn">
                    <button type="submit" className="btn btn-secondary"> Submit</button>
                </span>
            </form>
        )
    }
}
--------------------------------

now bind with this

-------------------------

Adding form elements and submit action to form and adding preventDefault:
--------------------

import React, {Component} from "react";
export default class SearchBar extends Component{
    constructor(props){
        super(props);
        this.state = {term : ""}
        this.onInputChange = this.onInputChange.bind(this)
    }
    onInputChange(event){
        console.log(event.target.value);
        this.setState({term : event.target.value})
    }
    onFormSubmit(event){
        event.preventDefault()
    }
    render(){
        return(
            <form onSubmit={this.onFormSubmit} className="input-group">
                <input 
                    placeholder="Enter the city to know the weather"
                    className="form-control"
                    value={this.state.term}
                    onChange={this.onInputChange}
                />
                <span className="input-group-btn">
                    <button type="submit" className="btn btn-secondary"> Submit</button>
                </span>
            </form>
        )
    }
}

-----------------------------------------

Create API Key for openweather map API

https://openweathermap.org/forecast5

put it in action index js file
------------------

MiddleWare :
-----------
intro to
Redux Promise

npm install --save redux-promise

and then update index js to hook the middleware 

import React from 'react';
import ReactDOM from 'react-dom';
import { Provider } from 'react-redux';
import { createStore, applyMiddleware } from 'redux';
import ReduxPromise from "redux-promise";


import App from './components/app';
import reducers from './reducers';

const createStoreWithMiddleware = applyMiddleware(ReduxPromise)(createStore);

ReactDOM.render(
  <Provider store={createStoreWithMiddleware(reducers)}>
    <App />
  </Provider>
  , document.querySelector('.container'));

-----------------------------------------------------------

Setup API URL in your actions/index js file

const API_KEY = "b2db3646b9374a099e3c2d837632d660";
const ROOT_URL = `https://samples.openweathermap.org/data/2.5/forecast?appid=${API_KEY}`
export const FETCH_WEATHER = "FETCH_WEATHER"

export function fetchWeather(){
    const url = `${ROOT_URL}&q=${city},us`;
    return {
        type: FETCH_WEATHER
    }
}
---------------------------------------------------
Now Axios

npm install --save axios

updated actions/index file 

import axios from "axios"
const API_KEY = "b2db3646b9374a099e3c2d837632d660";
const ROOT_URL = `https://samples.openweathermap.org/data/2.5/forecast?appid=${API_KEY}`
export const FETCH_WEATHER = "FETCH_WEATHER"

export function fetchWeather(){
    const url = `${ROOT_URL}&q=${city},us`;
    const request = axios.get(url);
    return {
        type: FETCH_WEATHER,
        payload : request
    }
}
----------------------------------------------------

now navigate to searhbar js to connect to redux 

import React, {Component} from "react";
import {connect} from 'react-redux';
import {bindActionCreators} from "redux";
import {fetchWeather} from "../actions/index";

class SearchBar extends Component{
    constructor(props){
        super(props);
        this.state = {term : ""}
        this.onInputChange = this.onInputChange.bind(this)
    }
    onInputChange(event){
        console.log(event.target.value);
        this.setState({term : event.target.value})
    }
    onFormSubmit(event){
        event.preventDefault();

    }
    render(){
        return(
            <form onSubmit={this.onFormSubmit} className="input-group">
                <input 
                    placeholder="Enter the city to know the weather"
                    className="form-control"
                    value={this.state.term}
                    onChange={this.onInputChange}
                />
                <span className="input-group-btn">
                    <button type="submit" className="btn btn-secondary"> Submit</button>
                </span>
            </form>
        )
    }
}

function mapDispatchToProps(dispatch){
    return bindActionCreators({fetchWeather},dispatch);
}

export default connect(null,mapDispatchToProps)(SearchBar);

-------------------------------

Implement Axios : updated searh_bar js and index js

import React, {Component} from "react";
import {connect} from 'react-redux';
import {bindActionCreators} from "redux";
import {fetchWeather} from "../actions/index";

class SearchBar extends Component{
    constructor(props){
        super(props);
        this.state = {term : ""}
        this.onInputChange = this.onInputChange.bind(this)
        this.onFormSubmit = this.onFormSubmit.bind(this);
    }
    onInputChange(event){
        this.setState({term : event.target.value})
    }
    onFormSubmit(event){
        event.preventDefault();
        this.props.fetchWeather(this.state.term);
        this.setState({term : ""}); 

    }
    render(){
        return(
            <form onSubmit={this.onFormSubmit} className="input-group">
                <input 
                    placeholder="Enter the city to know the weather"
                    className="form-control"
                    value={this.state.term}
                    onChange={this.onInputChange}
                />
                <span className="input-group-btn">
                    <button type="submit" className="btn btn-secondary"> Submit</button>
                </span>
            </form>
        )
    }
}

function mapDispatchToProps(dispatch){
    return bindActionCreators({fetchWeather},dispatch);
}

export default connect(null,mapDispatchToProps)(SearchBar);
-----------------------------------------------------------------------------

updated index js
----------------------

import axios from "axios"
const API_KEY = "1cbef1c38b3372ffd59a3081142939b7";
const ROOT_URL = `http://api.openweathermap.org/data/2.5/forecast?appid=${API_KEY}`
export const FETCH_WEATHER = "FETCH_WEATHER"

export function fetchWeather(city){
    const url = `${ROOT_URL}&q=${city},us`;
    const request = axios.get(url);
    return {
        type: FETCH_WEATHER,
        payload : request
    }
}
-------------------------------------------------------------------------


Add New Reducer file reducer_weather js

export default function(state=null, action){
    console.log("Action Received", action);
    return state;
}
---------------------------

Add index js file to reducer folder 

import { combineReducers } from 'redux';
import WeatherReducer from "./reducer_weather"
const rootReducer = combineReducers({
  weather: WeatherReducer
});

export default rootReducer;

--------------------------------

Print the console log statement in actions 

import axios from "axios"
const API_KEY = "1cbef1c38b3372ffd59a3081142939b7";
const ROOT_URL = `http://api.openweathermap.org/data/2.5/forecast?appid=${API_KEY}`
export const FETCH_WEATHER = "FETCH_WEATHER"

export function fetchWeather(city){
    const url = `${ROOT_URL}&q=${city},in`;
    const request = axios.get(url);

    console.log("Request :", request)
    return {
        type: FETCH_WEATHER,
        payload : request
    }
}

-------------------------------------------------------

remove console. logs in actions and reducers

-------------------
reducer_weather js
import {FETCH_WEATHER} from "../actions/index"


export default function(state=[], action){
    switch(action.type){
        case "FETH_WEATHER":
            return [action.payload.data, ...state]    
        // return state.concat([action.payload.data])


    }
    return state;
}
----------------------------------------------------

Creating Weather List Component :

import React, {Component} from "react";
export default class WeatherList extends Component{
    render(){
        return(
            <table className="table table-hover">
            <thead>
                <tr>
                    <th>City</th>
                    <th>Temperature</th>
                    <th>Pressure</th>
                    <th>Humidity</th>
                </tr>
            </thead>
            </table>
        )
    }
}
--------------------
import and render this in app js
------------------------------

Now connect to redux in weather_list js

import React, {Component} from "react";
import {connect} from "react-redux";
class WeatherList extends Component{
    render(){
        return(
            <table className="table table-hover">
            <thead>
                <tr>
                    <th>City</th>
                    <th>Temperature</th>
                    <th>Pressure</th>
                    <th>Humidity</th>
                </tr>
            </thead>
            </table>
        )
    }
}

function mapStateToProps(state){
    return {weather : state.weather};
}

export default connect(mapStateToProps)(WeatherList);

________________________________

Adding cities to table data

import React, {Component} from "react";
import {connect} from "react-redux";
class WeatherList extends Component{
   renderWeather(cityData){
    return(
        <tr>
            <td>{cityData.city.name}</td>
        </tr>
    )
   }
   
    render(){
        return(
            <table className="table table-hover">
            <thead>
                <tr>
                    <th>City</th>
                    <th>Temperature</th>
                    <th>Pressure</th>
                    <th>Humidity</th>
                </tr>
            </thead>
            <tbody>
                {this.props.weather.map(this.renderWeather)}
            </tbody>
            </table>
        )
    }
}

function mapStateToProps(state){
    return {weather : state.weather};
}

export default connect(mapStateToProps)(WeatherList);

-------------------------------



Adding Charts

React SparkLines


import React, {Component} from "react";
import {connect} from "react-redux";
import {Sparklines,SparklinesLine} from "react-sparklines"
class WeatherList extends Component{
   renderWeather(cityData){
       const name = cityData.city.name;
       const temps = cityData.list.map(weather => weather.main.temp);
    return(
        <tr key={name}>
            <td>{name}</td>
            <td>
                <Sparklines height={120} width={180} data={temps}>
                    <SparklinesLine color="red" />
                </Sparklines>
            </td>
        </tr>
    )
   }
   
    render(){
        return(
            <table className="table table-hover">
            <thead>
                <tr>
                    <th>City</th>
                    <th>Temperature</th>
                    <th>Pressure</th>
                    <th>Humidity</th>
                </tr>
            </thead>
            <tbody>
                {this.props.weather.map(this.renderWeather)}
            </tbody>
            </table>
        )
    }
}

function mapStateToProps(state){
    return {weather : state.weather};
}

export default connect(mapStateToProps)(WeatherList);

------------------------------------------------------------------

Refactoring components of chart and wether list

import React, {Component} from "react";
import {connect} from "react-redux";
import Data from "../components/data"
class WeatherList extends Component{
   renderWeather(cityData){
       const name = cityData.city.name;
       const temps = cityData.list.map(weather => weather.main.temp);
    return(
        <tr key={name}>
            <td>{name}</td>
            <td>
               <Data data={temps} color="green" />
            </td>
        </tr>
    )
   }
   
    render(){
        return(
            <table className="table table-hover">
            <thead>
                <tr>
                    <th>City</th>
                    <th>Temperature</th>
                    <th>Pressure</th>
                    <th>Humidity</th>
                </tr>
            </thead>
            <tbody>
                {this.props.weather.map(this.renderWeather)}
            </tbody>
            </table>
        )
    }
}

function mapStateToProps(state){
    return {weather : state.weather};
}

export default connect(mapStateToProps)(WeatherList);

-------------------------

data.js

import React from "react";
import {Sparklines,SparklinesLine} from "react-sparklines"

export default (props)=>{
    return (
        <div>
             <Sparklines height={120} width={180} data={props.data}>
                 <SparklinesLine color={props.color} />
             </Sparklines>
        </div>
    )
}
----------------------------------------


Adding Pressure and Humidity:

import React, {Component} from "react";
import {connect} from "react-redux";
import Data from "../components/data"
class WeatherList extends Component{
   renderWeather(cityData){
       const name = cityData.city.name;
       const temps = cityData.list.map(weather => weather.main.temp);
       const pressures = cityData.list.map(weather => weather.main.pressure);
       const humidities = cityData.list.map(weather => weather.main.humidity);


    return(
        <tr key={name}>
            <td>{name}</td>
            <td>
               <Data data={temps} color="green" />
            </td>
            <td>
               <Data data={pressures} color="red" />
            </td>
            <td>
               <Data data={humidities} color="black" />
            </td>

        </tr>
    )
   }
   
    render(){
        return(
            <table className="table table-hover">
            <thead>
                <tr>
                    <th>City</th>
                    <th>Temperature</th>
                    <th>Pressure</th>
                    <th>Humidity</th>
                </tr>
            </thead>
            <tbody>
                {this.props.weather.map(this.renderWeather)}
            </tbody>
            </table>
        )
    }
}

function mapStateToProps(state){
    return {weather : state.weather};
}

export default connect(mapStateToProps)(WeatherList);

-----------------------------

adding average line 

import React from "react";
import {Sparklines,SparklinesLine,SparklinesReferenceLine} from "react-sparklines"

export default (props)=>{
    return (
        <div>
             <Sparklines height={120} width={180} data={props.data}>
                 <SparklinesLine color={props.color} />
                 <SparklinesReferenceLine type="avg" />
             </Sparklines>

        </div>
    )
}

--------------------

